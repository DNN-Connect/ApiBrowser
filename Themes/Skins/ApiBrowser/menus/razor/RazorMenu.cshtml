@using DotNetNuke.Web.DDRMenu;
@using System.Dynamic;
@inherits DotNetNuke.Web.Razor.DotNetNukeWebPage<dynamic>
    
<ul class="navbar-nav me-auto mb-2 mb-lg-0">
    @RenderPages(Model.Source.root.Children)
</ul>

@helper RenderPages(IEnumerable<MenuNode> pages)
{
    if (!pages.Any())
    {
        return;
    }

    foreach (var page in pages)
    {
        var hasChildren = page.HasChildren();
        var dropdown = hasChildren ? "dropdown-toggle" :string.Empty;
        var active = page.Selected ? "active" : string.Empty;

        <li class="@(page.Selected ? "active" : string.Empty)">
            @if (!page.Enabled)
            {
                @page.Text
            }
            else
            {
                <a href="@page.Url" class="nav-link @dropdown @active">@page.Text</a>
            }

            @if (hasChildren)
            {
                <ul class="dropdown-menu">
                    @RenderNestedPages(page.Children)
                </ul>
            }
        </li>
    }    
}

@helper RenderNestedPages(IEnumerable<MenuNode> pages)
{
    foreach (var page in pages)
    {
        var hasChildren = page.HasChildren();
        var active = page.Selected ? "active" : string.Empty;

        <li>
            @if (!page.Enabled)
            {
                @page.Text
            }
            else
            {
                <a href="@page.Url" class="dropdown-item @active">@page.Text</a>
            }
        </li>
    }
}