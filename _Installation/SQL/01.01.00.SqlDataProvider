DELETE FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses
GO

DBCC CHECKIDENT ('[{objectQualifier}Connect_ApiBrowser_ApiClasses]', RESEED, 0);
GO

DBCC CHECKIDENT ('[{objectQualifier}Connect_ApiBrowser_Members]', RESEED, 0);
GO

DBCC CHECKIDENT ('[{objectQualifier}Connect_ApiBrowser_MemberCodeBlocks]', RESEED, 0);
GO

DELETE FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components
GO

DBCC CHECKIDENT ('[{objectQualifier}Connect_ApiBrowser_Components]', RESEED, 0);
GO

DELETE FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces
GO

DBCC CHECKIDENT ('[{objectQualifier}Connect_ApiBrowser_ApiNamespaces]', RESEED, 0);
GO

ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses ADD 
FullName VARCHAR(1000) NOT NULL,
IsAbstract BIT NOT NULL,
IsAnsiClass BIT NOT NULL,
IsArray BIT NOT NULL,
IsAutoClass BIT NOT NULL,
IsAutoLayout BIT NOT NULL,
IsBeforeFieldInit BIT NOT NULL,
IsByReference BIT NOT NULL,
IsClass BIT NOT NULL,
IsDefinition BIT NOT NULL,
IsEnum BIT NOT NULL,
IsExplicitLayout BIT NOT NULL,
IsFunctionPointer BIT NOT NULL,
IsGenericInstance BIT NOT NULL,
IsGenericParameter BIT NOT NULL,
IsImport BIT NOT NULL,
IsInterface BIT NOT NULL,
IsNested BIT NOT NULL,
IsNestedAssembly BIT NOT NULL,
IsNestedPrivate BIT NOT NULL,
IsNestedPublic BIT NOT NULL,
IsNotPublic BIT NOT NULL
GO

ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members ADD 
FullName VARCHAR(1000) NOT NULL
GO

ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members ALTER COLUMN 
MemberName VARCHAR(500) NOT NULL
GO

ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members ALTER COLUMN 
Declaration VARCHAR(500) NULL
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories(
 [ComponentHistoryId] [int] IDENTITY(1,1) NOT NULL,
 [ComponentId] [int] NOT NULL,
 [Version] [varchar](15) NOT NULL,
 [VersionNormalized] [varchar](15) NOT NULL,
 [FullName] [varchar](1000) NOT NULL,
 [CodeLines] [int] NOT NULL,
 [CommentLines] [int] NULL,
 [EmptyLines] [int] NULL,
 CONSTRAINT PK_{objectQualifier}Connect_ApiBrowser_ComponentHistories PRIMARY KEY CLUSTERED 
(
 [ComponentHistoryId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies(
 [DependencyId] [int] IDENTITY(1,1) NOT NULL,
 [ComponentHistoryId] [int] NOT NULL,
 [FullName] [varchar](1000) NOT NULL,
 [Version] [varchar](15) NOT NULL,
 [VersionNormalized] [varchar](15) NOT NULL,
 [Name] [varchar](100) NOT NULL,
 [DepComponentHistoryId] [int] NULL,
 CONSTRAINT PK_{objectQualifier}Connect_ApiBrowser_Dependencies PRIMARY KEY CLUSTERED 
(
 [DependencyId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_References') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_References(
 [ReferenceId] [int] IDENTITY(1,1) NOT NULL,
 [CodeBlockId] [int] NOT NULL,
 [FullName] [varchar](1000) NOT NULL,
 [Offset] [int] NOT NULL,
 [ReferencedMemberId] [int] NULL,
 CONSTRAINT PK_{objectQualifier}Connect_ApiBrowser_References PRIMARY KEY CLUSTERED 
(
 [ReferenceId] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_ApiBrowser_ComponentHistories_Components') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_ApiBrowser_ComponentHistories_Components FOREIGN KEY([ComponentId])
REFERENCES {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components ([ComponentId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_ApiBrowser_ComponentHistories_Components') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories CHECK CONSTRAINT FK_{objectQualifier}Connect_ApiBrowser_ComponentHistories_Components
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_ApiBrowser_Dependencies_ComponentHistories') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_ApiBrowser_Dependencies_ComponentHistories FOREIGN KEY([ComponentHistoryId])
REFERENCES {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories ([ComponentHistoryId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_ApiBrowser_Dependencies_ComponentHistories') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies CHECK CONSTRAINT FK_{objectQualifier}Connect_ApiBrowser_Dependencies_ComponentHistories
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_ApiBrowser_References_MemberCodeBlocks') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_References'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_References  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_ApiBrowser_References_MemberCodeBlocks FOREIGN KEY([CodeBlockId])
REFERENCES {databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberCodeBlocks ([CodeBlockId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_ApiBrowser_References_MemberCodeBlocks') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_References'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_ApiBrowser_References CHECK CONSTRAINT FK_{objectQualifier}Connect_ApiBrowser_References_MemberCodeBlocks
GO

/******* VIEWS *******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_ApiClasses'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_ApiClasses
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_ApiClasses
AS
SELECT
 c.*,
 uc.DisplayName CreatedByUserDisplayName,
 um.DisplayName LastModifiedByUserDisplayName,
 docs.Contents DocumentationContents,
 n.NamespaceName,
 n.NamespaceName + '.' + c.ClassName FullQualifier,
 comp.ModuleId,
 comp.ComponentName,
 comp.LatestVersion,
 (SELECT COUNT(MemberId) FROM {objectQualifier}Connect_ApiBrowser_Members WHERE ClassId=c.ClassId) AS MemberCount
FROM
 {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses c
 INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces n ON n.NamespaceId=c.NamespaceId
 INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components comp ON comp.ComponentId=c.ComponentId
 LEFT JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Documentations docs ON docs.DocumentationId=c.DocumentationId
 LEFT JOIN {databaseOwner}{objectQualifier}Users uc ON uc.UserID=c.CreatedByUserID
 LEFT JOIN {databaseOwner}{objectQualifier}Users um ON um.UserID=c.LastModifiedByUserID
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Dependencies'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Dependencies
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Dependencies
AS
SELECT
 d.*,
 c.ComponentName,
 c.LatestVersion,
 cdep.ComponentName DependentComponentName
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies d
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories ch ON ch.ComponentHistoryId=d.ComponentHistoryId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components c ON c.ComponentId=ch.ComponentId
LEFT JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories chdep ON chdep.ComponentHistoryId=d.DepComponentHistoryId
LEFT JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components cdep ON cdep.ComponentId=chdep.ComponentId
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Documentations'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Documentations
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Documentations
AS
SELECT
 d.*,
 CAST(CASE WHEN ISNULL(c.DocumentationId, -1)=d.DocumentationId 
        OR ISNULL(m.DocumentationId, -1)=d.DocumentationId
 THEN 1
 ELSE 0
 END AS BIT) IsCurrentVersion,
 uc.DisplayName CreatedByUserDisplayName,
 uc.Email CreatedByUserEmail,
 um.DisplayName LastModifiedByUserDisplayName,
 um.Email LastModifiedByUserEmail
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Documentations d
 INNER JOIN {databaseOwner}{objectQualifier}Users uc ON uc.UserID=d.CreatedByUserID
 INNER JOIN {databaseOwner}{objectQualifier}Users um ON um.UserID=d.LastModifiedByUserID
 LEFT JOIN {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_ApiClasses c ON c.FullQualifier=d.FullName
 LEFT JOIN {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Members m ON m.FullQualifier=d.FullName
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Members'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Members
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Members
AS
SELECT
 m.*,
 uc.DisplayName CreatedByUserDisplayName,
 um.DisplayName LastModifiedByUserDisplayName,
 docs.Contents DocumentationContents,
 c.ClassName,
 n.NamespaceName,
 n.NamespaceName + '.' + c.ClassName + '.' + m.MemberName FullQualifier,
 comp.ModuleId,
 comp.ComponentName,
 comp.LatestVersion,
 (SELECT COUNT(CodeBlockId) FROM {objectQualifier}Connect_ApiBrowser_MemberCodeBlocks WHERE MemberId=m.MemberId) AS CodeBlockCount
FROM
 {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members m
 INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses c ON c.ClassId=m.ClassId
 INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces n ON n.NamespaceId=c.NamespaceId
 INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components comp ON comp.ComponentId=c.ComponentId
 LEFT JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Documentations docs ON docs.DocumentationId=m.DocumentationId
 LEFT JOIN {databaseOwner}{objectQualifier}Users uc ON uc.UserID=m.CreatedByUserID
 LEFT JOIN {databaseOwner}{objectQualifier}Users um ON um.UserID=m.LastModifiedByUserID
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_NamespacesAndClasses'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_NamespacesAndClasses
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_NamespacesAndClasses
AS
SELECT
 n.ModuleId,
 a.NamespaceId, 
 a.ClassId,
 CAST(1 AS BIT) IsClass,
 n.NamespaceName + '.' + a.ClassName [Name],
 a.Description,
 a.PendingDescription,
 a.IsDeprecated,
 a.DeprecatedInVersion,
 a.DisappearedInVersion,
 a.LastModifiedByUserID,
 a.LastModifiedOnDate
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses a
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces n ON n.NamespaceId=a.NamespaceId
UNION
SELECT
 n.ModuleId,
 n.NamespaceId,
 -1 ClassId,
 CAST(0 AS BIT) IsClass,
 n.NamespaceName [Name],
 n.Description,
 '' PendingDescription,
 0 IsDeprecated,
 NULL DeprecatedInVersion,
 NULL DisappearedInVersion,
 -1 LastModifiedByUserID,
 GETDATE() LastModifiedOnDate
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces n
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_References'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_References
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_References
AS
SELECT
r.*,
m.MemberName,
m.AppearedInVersion,
m.DeprecatedInVersion,
m.DisappearedInVersion
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_References r
LEFT JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members m ON m.MemberId=r.ReferencedMemberId
GO

/******* SPROCS *******/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_RegisterCodeBlock') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_RegisterCodeBlock
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_ClassDisappeared') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ClassDisappeared
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ClassDisappeared
 @ClassId INT,
 @Version VARCHAR(15)
AS
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses
 SET [DisappearedInVersion]=@Version
 WHERE [ClassId]=@ClassId
  AND ISNULL([DisappearedInVersion],'99.99.99') > @Version
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetComponents') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetComponents
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetComponents
 @ModuleId INT
AS
SELECT
 c.*,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses cl WHERE cl.ComponentId=c.ComponentId) NrClasses,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses cl WHERE cl.ComponentId=c.ComponentId AND ISNULL(cl.DocumentationId, -1) <> -1) NrDocumentedClasses,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members m INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses cl ON m.ClassId=cl.ClassId WHERE cl.ComponentId=c.ComponentId) NrMembers,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members m INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses cl ON m.ClassId=cl.ClassId WHERE cl.ComponentId=c.ComponentId AND ISNULL(m.DocumentationId, -1) <> -1) NrDocumentedMembers
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components c
WHERE c.ModuleId=@ModuleId
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetModerationList') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetModerationList
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetModerationList
@ModuleId INT
AS
SELECT
*
FROM (SELECT
 0 DocType,
 c.ClassId,
 -1 MemberId,
 -1 DocumentationId,
 c.FullQualifier,
 c.Description OldText,
 c.PendingDescription NewText,
 c.LastModifiedOnDate,
 c.LastModifiedByUserDisplayName
FROM {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_ApiClasses c
WHERE NOT c.PendingDescription IS NULL AND c.ModuleId=@ModuleId
UNION
SELECT
 1 DocType,
 m.ClassId,
 m.MemberId,
 -1 DocumentationId,
 m.FullQualifier,
 m.Description OldText,
 m.PendingDescription NewText,
 m.LastModifiedOnDate,
 m.LastModifiedByUserDisplayName
FROM {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Members m
WHERE NOT m.PendingDescription IS NULL AND m.ModuleId=@ModuleId
UNION
SELECT
 2 DocType,
 -1 ClassId,
 -1 MemberId,
 d1.DocumentationId,
 d1.FullName FullQualifier,
 d2.Contents OldText,
 d1.Contents NewText,
 d1.LastModifiedOnDate,
 d1.LastModifiedByUserDisplayName
FROM {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Documentations d1
 LEFT JOIN {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Documentations d2 ON d1.FullName=d2.FullName AND d2.IsCurrentVersion=1 AND d2.ModuleId=@ModuleId
WHERE d1.ModuleId=@ModuleId AND d1.LastModifiedOnDate > d2.LastModifiedOnDate OR d2.DocumentationId IS NULL) x
ORDER BY x.FullQualifier, x.LastModifiedOnDate
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetNamespacesAndClasses') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetNamespacesAndClasses
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetNamespacesAndClasses
 @ModuleId INT
AS
SELECT
*
FROM (SELECT 
 a.NamespaceId, 
 a.ClassId,
 n.NamespaceName + '.' + a.ClassName [Name],
 a.Description,
 a.IsDeprecated
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses a
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces n ON n.NamespaceId=a.NamespaceId
WHERE n.ModuleId=@ModuleId
UNION
SELECT
 n.NamespaceId,
 -1 ClassId,
 n.NamespaceName [Name],
 n.Description,
 0 IsDeprecated
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces n
WHERE n.ModuleId=@ModuleId) x
ORDER BY x.[Name]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateClass') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateClass
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateClass
 @NamespaceId INT,
 @ComponentId INT,
 @ClassName NVARCHAR(200),
 @FullName VARCHAR(1000),
 @Declaration NVARCHAR(500),
 @Documentation NVARCHAR(MAX),
 @Description NVARCHAR(MAX),
 @Version VARCHAR(15),
 @IsDeprecated BIT,
 @DeprecationMessage NVARCHAR(1000),
 @IsAbstract BIT,
 @IsAnsiClass BIT,
 @IsArray BIT,
 @IsAutoClass BIT,
 @IsAutoLayout BIT,
 @IsBeforeFieldInit BIT,
 @IsByReference BIT,
 @IsClass BIT,
 @IsDefinition BIT,
 @IsEnum BIT,
 @IsExplicitLayout BIT,
 @IsFunctionPointer BIT,
 @IsGenericInstance BIT,
 @IsGenericParameter BIT,
 @IsImport BIT,
 @IsInterface BIT,
 @IsNested BIT,
 @IsNestedAssembly BIT,
 @IsNestedPrivate BIT,
 @IsNestedPublic BIT,
 @IsNotPublic BIT
AS
IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses WHERE [NamespaceId]=@NamespaceId AND [ComponentId]=@ComponentId AND [ClassName]=@ClassName)
 INSERT INTO {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses ([NamespaceId], [ComponentId], [ClassName], [FullName], [Declaration], [Documentation], [Description],[AppearedInVersion], [DeprecatedInVersion], [DisappearedInVersion], [IsDeprecated], [DeprecationMessage], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate], [IsAbstract],[IsAnsiClass],[IsArray],[IsAutoClass],[IsAutoLayout],[IsBeforeFieldInit],[IsByReference],[IsClass],[IsDefinition],[IsEnum],[IsExplicitLayout],[IsFunctionPointer],[IsGenericInstance],[IsGenericParameter],[IsImport],[IsInterface],[IsNested],[IsNestedAssembly],[IsNestedPrivate],[IsNestedPublic],[IsNotPublic])
  VALUES (@NamespaceId, @ComponentId, @ClassName, @FullName, @Declaration, @Documentation, @Description, @Version, NULL, NULL, 0, NULL, -1, GETDATE(), -1, GETDATE(), @IsAbstract, @IsAnsiClass, @IsArray, @IsAutoClass, @IsAutoLayout, @IsBeforeFieldInit, @IsByReference, @IsClass, @IsDefinition, @IsEnum, @IsExplicitLayout, @IsFunctionPointer, @IsGenericInstance, @IsGenericParameter, @IsImport, @IsInterface, @IsNested, @IsNestedAssembly, @IsNestedPrivate, @IsNestedPublic, @IsNotPublic);
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses
 SET [AppearedInVersion]=@Version, [FullName]=@FullName
 WHERE [NamespaceId]=@NamespaceId AND [ComponentId]=@ComponentId AND [ClassName]=@ClassName AND [AppearedInVersion]>@Version;
IF @IsDeprecated=1
BEGIN
 IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses WHERE [NamespaceId]=@NamespaceId AND [ComponentId]=@ComponentId AND [ClassName]=@ClassName
  AND ISNULL([DeprecatedInVersion],'99.99.99') < @Version)
 UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses
  SET [DeprecatedInVersion]=@Version,
   [IsDeprecated]=1,
   [DeprecationMessage]=ISNULL([DeprecationMessage], @DeprecationMessage)
  WHERE [NamespaceId]=@NamespaceId AND [ComponentId]=@ComponentId AND [ClassName]=@ClassName;
END;
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses
 SET [Declaration]=ISNULL([Declaration],@Declaration),
  [Documentation]=ISNULL([Documentation],@Documentation)
 WHERE
  [NamespaceId]=@NamespaceId AND [ComponentId]=@ComponentId AND [ClassName]=@ClassName;
SELECT
 *
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses
WHERE
 [NamespaceId]=@NamespaceId AND [ComponentId]=@ComponentId AND [ClassName]=@ClassName;
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateComponent') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateComponent
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateComponent
 @ModuleId INT,
 @ComponentName NVARCHAR(100),
 @LatestVersion VARCHAR(15)
AS
IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components WHERE [ModuleId]=@ModuleId AND [ComponentName]=@ComponentName)
 INSERT INTO {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components ([ModuleId], [ComponentName], [LatestVersion])
  VALUES (@ModuleId, @ComponentName, @LatestVersion);
ELSE
 UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components
  SET [LatestVersion]=@LatestVersion
  WHERE [ModuleId]=@ModuleId
   AND [ComponentName]=@ComponentName
   AND [LatestVersion]<@LatestVersion;
SELECT *
 FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components
 WHERE [ModuleId]=@ModuleId
   AND [ComponentName]=@ComponentName;
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateComponentHistory') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateComponentHistory
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateComponentHistory
 @ComponentId INT,
 @FullName VARCHAR(1000),
 @Version VARCHAR(15),
 @VersionNormalized VARCHAR(15),
 @CodeLines INT,
 @CommentLines INT,
 @EmptyLines INT
AS
IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories WHERE [ComponentId]=@ComponentId AND [Version]=@Version)
 INSERT INTO {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories ([ComponentId],[Version],[VersionNormalized],[FullName],[CodeLines],[CommentLines],[EmptyLines])
  VALUES (@ComponentId, @Version, @VersionNormalized, @FullName, @CodeLines, @CommentLines, @EmptyLines);
ELSE
 UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories
  SET [FullName]=@FullName,
  [CodeLines]=@CodeLines,
  [CommentLines]=@CommentLines,
  [EmptyLines]=@EmptyLines
  WHERE [ComponentId]=@ComponentId AND [Version]=@Version;
SELECT *
 FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories 
 WHERE [ComponentId]=@ComponentId AND [Version]=@Version;
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateDependency') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateDependency
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateDependency
@ComponentHistoryId INT,
@FullName VARCHAR(1000),
@Version VARCHAR(15),
@VersionNormalized VARCHAR(15),
@Name VARCHAR(100)
AS
IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies WHERE [ComponentHistoryId]=@ComponentHistoryId AND [FullName]=@FullName)
INSERT INTO {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies
([ComponentHistoryId],[FullName],[Version],[VersionNormalized],[Name])
VALUES (@ComponentHistoryId, @FullName, @Version, @VersionNormalized, @Name)
ELSE
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies
SET [Version]=@Version, [VersionNormalized]=@VersionNormalized, [Name]=@Name
WHERE [ComponentHistoryId]=@ComponentHistoryId AND [FullName]=@FullName
SELECT * FROM {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_Dependencies
WHERE [ComponentHistoryId]=@ComponentHistoryId AND [FullName]=@FullName
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateMember') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateMember
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateMember
 @ClassId INT,
 @MemberType INT,
 @MemberName VARCHAR(500),
 @FullName VARCHAR(1000),
 @Declaration NVARCHAR(500),
 @Documentation NVARCHAR(MAX),
 @Description NVARCHAR(MAX),
 @Version VARCHAR(15),
 @IsDeprecated BIT,
 @DeprecationMessage NVARCHAR(1000)
AS
IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members WHERE [ClassId]=@ClassId AND [MemberType]=@MemberType AND [MemberName]=@MemberName)
 INSERT INTO {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members ([ClassId],[MemberType],[MemberName],[FullName],[Declaration],[Documentation],[Description], [AppearedInVersion],[DeprecatedInVersion],[DisappearedInVersion],[IsDeprecated],[DeprecationMessage], [CreatedByUserID], [CreatedOnDate], [LastModifiedByUserID], [LastModifiedOnDate])
  VALUES (@ClassId, @MemberType, @MemberName, @FullName, @Declaration, @Documentation, @Description, @Version, NULL, NULL, 0, NULL, -1, GETDATE(), -1, GETDATE());
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members
 SET [AppearedInVersion]=@Version, [FullName]=@FullName
 WHERE [ClassId]=@ClassId AND [MemberType]=@MemberType AND [MemberName]=@MemberName AND [AppearedInVersion]>@Version;
IF @IsDeprecated=1
BEGIN
 IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members WHERE [ClassId]=@ClassId AND [MemberType]=@MemberType AND [MemberName]=@MemberName
  AND ISNULL([DeprecatedInVersion],'99.99.99') < @Version)
 UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members
  SET [DeprecatedInVersion]=@Version,
   [IsDeprecated]=1,
   [DeprecationMessage]=ISNULL([DeprecationMessage], @DeprecationMessage)
 WHERE [ClassId]=@ClassId AND [MemberType]=@MemberType AND [MemberName]=@MemberName;
END;
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members
 SET [Declaration]=ISNULL([Declaration],@Declaration),
  [Documentation]=ISNULL([Documentation],@Documentation)
 WHERE
  [ClassId]=@ClassId AND [MemberType]=@MemberType AND [MemberName]=@MemberName;
SELECT
 *
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members
WHERE
 [ClassId]=@ClassId AND [MemberType]=@MemberType AND [MemberName]=@MemberName;
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateMemberCodeBlock') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateMemberCodeBlock
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateMemberCodeBlock
 @MemberId INT,
 @CodeHash CHAR(32),
 @Version VARCHAR(15),
 @FileName NVARCHAR (300), 
 @StartLine INT, 
 @StartColumn INT, 
 @EndLine INT, 
 @EndColumn INT
AS
IF NOT EXISTS(SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberCodeBlocks WHERE [MemberId]=@MemberId AND [Version]=@Version)
 INSERT INTO {databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberCodeBlocks ([CodeHash], [EndColumn], [EndLine], [FileName], [MemberId], [StartColumn], [StartLine], [Version])
  VALUES (@CodeHash, @EndColumn, @EndLine, @FileName, @MemberId, @StartColumn, @StartLine, @Version);
SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberCodeBlocks WHERE [MemberId]=@MemberId AND [Version]=@Version;
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateNamespace') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateNamespace
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateNamespace
 @ModuleId INT,
 @ParentId INT,
 @NamespaceName NVARCHAR(500),
 @LastQualifier NVARCHAR(100)
AS
IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces WHERE [ModuleId]=@ModuleId AND [NamespaceName]=@NamespaceName)
 INSERT INTO {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces ([ModuleId], [ParentId], [NamespaceName], [LastQualifier])
  VALUES (@ModuleId, @ParentId, @NamespaceName, @LastQualifier);
SELECT *
 FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces
 WHERE [ModuleId]=@ModuleId
   AND [NamespaceName]=@NamespaceName;
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateReference') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateReference
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC {databaseOwner}{objectQualifier}Connect_ApiBrowser_GetOrCreateReference
@CodeBlockId INT,
@FullName VARCHAR(1000),
@Offset INT
AS
IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_References WHERE [CodeBlockId]=@CodeBlockId AND [FullName]=@FullName)
INSERT INTO {databaseOwner}{objectQualifier}Connect_ApiBrowser_References ([CodeBlockId],[FullName],[Offset])
VALUES (@CodeBlockId, @FullName, @Offset)
SELECT * FROM {databaseOwner}{objectQualifier}vw_Connect_ApiBrowser_References
WHERE [CodeBlockId]=@CodeBlockId AND [FullName]=@FullName
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberDisappeared') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberDisappeared
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberDisappeared
 @MemberId INT,
 @Version VARCHAR(15)
AS
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members
 SET [DisappearedInVersion]=@Version
 WHERE [MemberId]=@MemberId
  AND ISNULL([DisappearedInVersion],'99.99.99') > @Version
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_UpdateDependencies') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_UpdateDependencies
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
--DECLARE @ModuleId INT = 2430;
CREATE PROC {databaseOwner}{objectQualifier}Connect_ApiBrowser_UpdateDependencies
@ModuleId INT
AS
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies
SET [DepComponentHistoryId]=childch.ComponentHistoryId
FROM
{databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies d
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories ch ON ch.ComponentHistoryId=d.ComponentHistoryId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components c ON c.ComponentId=ch.ComponentId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories childch ON childch.FullName=d.FullName
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Components childc ON childc.ComponentId=childch.ComponentId AND childc.ModuleId=c.ModuleId
WHERE c.ModuleId=@ModuleId
AND d.DepComponentHistoryId IS NULL
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_ApiBrowser_UpdateReferences') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_ApiBrowser_UpdateReferences
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC {databaseOwner}{objectQualifier}Connect_ApiBrowser_UpdateReferences
@ModuleId INT
AS
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_References
SET [ReferencedMemberId]=childm.MemberId
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_References r
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberCodeBlocks mcb ON mcb.CodeBlockId=r.CodeBlockId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members m ON m.MemberId=mcb.MemberId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses c ON c.ClassId=m.ClassId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories ch ON ch.ComponentId=c.ComponentId AND mcb.Version=ch.Version
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces n ON n.NamespaceId=c.NamespaceId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members childm ON childm.FullName=r.FullName
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses childc ON childc.ClassId=childm.ClassId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories childch ON childch.ComponentId=childc.ComponentId AND childch.ComponentId=ch.ComponentId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces childn ON childn.NamespaceId=childc.NamespaceId
WHERE n.ModuleId=@ModuleId
AND childn.ModuleId=@ModuleId
AND r.ReferencedMemberId IS NULL;
UPDATE {databaseOwner}{objectQualifier}Connect_ApiBrowser_References
SET [ReferencedMemberId]=childm.MemberId
FROM {databaseOwner}{objectQualifier}Connect_ApiBrowser_References r
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_MemberCodeBlocks mcb ON mcb.CodeBlockId=r.CodeBlockId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members m ON m.MemberId=mcb.MemberId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses c ON c.ClassId=m.ClassId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories ch ON ch.ComponentId=c.ComponentId AND mcb.Version=ch.Version
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces n ON n.NamespaceId=c.NamespaceId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Members childm ON childm.FullName=r.FullName
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiClasses childc ON childc.ClassId=childm.ClassId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ComponentHistories childch ON childch.ComponentId=childc.ComponentId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_ApiNamespaces childn ON childn.NamespaceId=childc.NamespaceId
INNER JOIN {databaseOwner}{objectQualifier}Connect_ApiBrowser_Dependencies d ON d.ComponentHistoryId=ch.ComponentHistoryId
WHERE n.ModuleId=@ModuleId
AND childn.ModuleId=@ModuleId
AND d.DepComponentHistoryId=childch.ComponentHistoryId
AND r.ReferencedMemberId IS NULL;
GO

